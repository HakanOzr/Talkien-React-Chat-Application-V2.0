{"version":3,"sources":["../src/app-router.js"],"names":["START_TIME","Date","AppRouter","app","RouterKur","bind","console","log","post","req","res","next","body","models","kullanici","Yarat","then","unset","status","json","catch","error","err","anahtar_kelime","get","arama","sonuclar","hata","tokenId","token","tokenVekullaniciYukle","kullaniciId","yukle","giris","kanalId","mesaj","kanal","uyeler","query","_id","$in","options","isim","tarih","CERCATROVA","kullanicilar","$lookup","from","localField","foreignField","as","$match","$all","$project","ad","sonMesaj","guncellendi","online","$sort","$limit","aggregate","kanallar","filtre","JSON","parse","toString","limit","offset","KanalMesajlariniAl","mesajlar","cikis","message"],"mappings":"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","file":"app-router.js","sourcesContent":["import moment from 'moment';\nimport _ from 'lodash';\n\n\nexport const START_TIME = new Date();\nexport default class AppRouter{\n\n\n    constructor(app){\n\n        this.app = app;\n        this.RouterKur=this.RouterKur.bind(this);\n\n        this.RouterKur();\n    }\n\n    RouterKur(){\n\n        const app = this.app;\n\n        console.log(\"Uygulama Router fonksiyonel durumda !\");\n\n\n        /**\n         * @endpoint /api/kullanicilar\n         * @method: POST\n         **/\n\n        app.post('/api/kullanicilar',(req , res , next) =>{\n\n            const body = req.body;\n\n            app.models.kullanici.Yarat(body).then((kullanici) =>{\n\n                _.unset(kullanici , 'password');\n\n                return res.status(200).json(kullanici);\n\n            }).catch(err =>{\n\n                return res.status(503).json({error: err});\n            })\n\n\n\n        });\n\n        /**\n         * @endpoint /api/kullanicilar/arama\n         * @method: POST\n         **/\n\n        app.post('/api/kullanicilar/arama' , (req , res , next) =>{\n\n            const anahtar_kelime =_.get(req ,'body.arama' , '');\n\n\n\n            app.models.kullanici.arama(anahtar_kelime).then((sonuclar) =>{\n\n\n\n                return res.status(200).json(sonuclar);\n            }).catch((hata)=>{\n\n                return res.status(404).json({\n\n                    hata : 'Bulunamadi.',\n                })\n\n\n            })\n\n\n        });\n\n\n\n\n        /**\n         * @endpoint /api/kullanicilar/ben\n         * @method: GET\n         **/\n        app.get('/api/kullanicilar/ben' , (req , res , next) =>{\n\n            let tokenId = req.get('authorization');\n\n            if(!tokenId){\n                //sorguyla token alma\n                tokenId =_.get(req , 'query.auth');\n            }\n\n            app.models.token.tokenVekullaniciYukle(tokenId).then((token) =>{\n\n                _.unset(token, 'kullanici.password');\n                return res.json(token);\n\n\n\n            }).catch(hata =>{\n\n\n                return res.status(401).json({\n                    hata: hata,\n                })\n\n            });\n\n\n\n\n\n\n        });\n\n\n\n\n        /**\n         * @endpoint /api/kullanicilar/:id\n         * @method: GET\n         **/\n\n        app.get('/api/kullanicilar/:id' , (req , res , next) => {\n\n            const kullaniciId = _.get(req , 'params.id' );\n\n            //return res.json({hi :'there'});\n\n           app.models.kullanici.yukle(kullaniciId).then((kullanici) =>{\n\n               _.unset(kullanici , 'password'); // sifreyi databasede gostermemek icin ne yazarsam onu goremem\n\n               return res.status(200).json(kullanici);\n\n            }).catch(hata => {\n\n                return res.status(404).json({\n                    hata:hata,\n                })\n            })\n\n\n        });\n\n        /**\n         * @endpoint /api/kullanicilar/giris\n         * @method: POST\n         **/\n\n            app.post('/api/kullanicilar/giris' , (req , res , next) => {\n\n                const body = _.get( req , 'body');\n                //return res.json(body)\n\n                app.models.kullanici.giris(body).then((token) => { // isin yoksa login olustur kullanici.jsde\n\n\n                    //console.log(\"Su kadar kullanici var :);\n                    return res.status(200).json(token);\n\n\n\n                }).catch(hata => {\n\n                    return res.status(401).json({\n                        hata: hata\n                    })\n                })\n\n            });\n\n\n        /**\n         * @endpoint /api/kanallar/:id\n         * @method: GET\n         **/\n\n        app.get('/api/kanallar/:id',(req , res , next) => {\n\n            const kanalId = _.get(req, 'params.id');\n\n            console.log(kanalId);\n\n            if(!kanalId){\n\n                return res.status(404).json({error: {mesaj: \"Not found.\"}});\n\n            }\n\n            app.models.kanal.yukle(kanalId).then((kanal) => {\n\n                const uyeler = kanal.uyeler;\n                const query ={\n\n                    _id: {$in: uyeler}\n\n                };\n                const options = { _id: 1 , isim: 1 , tarih : 1};\n\n                app.models.kullanici.CERCATROVA(query , options).then((kullanicilar)=>{\n\n                    kanal.kullanicilar = kullanicilar;\n                    return res.status(200).json(kanal);\n\n                }).catch(err =>{\n\n                    return res.status(404).json({error: {mesaj: \"Not found.\"}});\n                });\n\n\n\n\n            }).catch((err) =>{\n\n                return res.status(404).json({error: {mesaj: \"Not found.\"}});\n\n            })\n\n        });\n\n        /**\n         * @endpoint /api/ben/kanallar\n         * @method: GET\n         **/\n\n        app.get('/api/ben/kanallar', (req , res , next) => {\n\n\n            let tokenId = req.get('authorization');\n\n            if(!tokenId){\n                //sorguyla token alma\n                tokenId =_.get(req, 'query.auth');\n            }\n\n            app.models.token.tokenVekullaniciYukle(tokenId).then((token) => {\n\n\n                const kullaniciId = token.kullaniciId;\n\n\n                const query = [\n\n                    {\n                        $lookup: {\n                            from: 'kullanicilar',\n                            localField: 'uyeler',\n                            foreignField: '_id',\n                            as: 'kullanicilar',\n                        }\n                    },\n                    {\n                        $match: {\n                            uyeler: {$all: [kullaniciId]}\n                        }\n                    },\n                    {\n                        $project: {\n                            _id: true,\n                            ad: true,\n                            sonMesaj: true,\n                            tarih: true,\n                            guncellendi:true,\n                            kullaniciId: true,\n                            kullanicilar: {\n                                _id: true,\n                                isim: true,\n                                tarih: true,\n                                online:true,\n                            },\n                            uyeler: true,\n                        }\n                    },\n                    {\n                        $sort: {guncellendi: -1 , tarih: 1}\n                    },\n                    {\n                        $limit: 50,\n                    }\n                ];\n\n\n                app.models.kanal.aggregate(query).then((kanallar) =>{\n\n                return res.status(200).json(kanallar);\n\n\n                }).catch((err) =>{\n\n\n                    return res.status(404).json({err :{mesaj : \"Bulunamadi\"}});\n                });\n\n\n\n                //return res.json(token);\n\n\n\n            }).catch(hata =>{\n\n\n                return res.status(401).json({\n                    hata: \"Erisim izniniz kibarca reddedildi kibarca ama\",\n                })\n\n            });\n\n\n\n        });\n\n\n        /**\n         * @endpoint /api/kanallar/:id/mesajlar\n         * @method: GET\n         **/\n\n        app.get('/api/kanallar/:id/mesajlar', (req , res , next) =>{\n\n            let filtre = _.get(req, 'query.filtre', null);\n            if (filtre) {\n\n                filtre = JSON.parse(filtre);\n                console.log(filtre);\n            }\n\n            const kanalId = _.toString(_.get(req, 'params.id'));\n            const limit = _.get(filtre, 'limit', 50);\n            const offset = _.get(filtre, 'offset', 0);\n\n            //kullanici login midir dostum\n            // kullanici kanalin uyesimi\n            this.app.models.mesaj.KanalMesajlariniAl(kanalId , limit , offset).then((mesajlar)=>{\n\n\n                return res.status(200).json(mesajlar);\n\n\n            }).catch((hata) =>{\n\n                return res.status(400).json({hata :{mesaj : \"Bulunamadi\"}});\n            })\n\n\n\n\n        });\n\n        /**\n         * @endpoint /api/ben/cikis\n         * @method: GET\n         **/\n\n        app.get('/api/ben/cikis', (req, res, next) => {\n\n            let tokenId = req.get('authorization');\n\n            if (!tokenId) {\n                // get token from query\n\n                tokenId = _.get(req, 'query.auth');\n            }\n\n\n            app.models.token.tokenVekullaniciYukle(tokenId).then((token) => {\n\n\n                app.models.token.cikis(token);\n\n                return res.status(200).json({\n                    message: 'Basarili.'\n                });\n\n            }).catch(hata => {\n\n\n                return res.status(401).json({error: {message: 'Izin reddedildi'}});\n            })\n\n\n\n        })\n\n\n    }\n\n}"]}