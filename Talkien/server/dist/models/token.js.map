{"version":3,"sources":["../../src/models/token.js"],"names":["Token","app","tokenler","id","Promise","resolve","reject","cachetoken","get","IdileTokenBul","hata","token","tokenId","_id","set","toString","remove","db","collection","bilgi","yukle","then","kullaniciId","models","kullanici","catch","callback","idObject","sorgu","findOne","sonuc","Mesaj","tarih","Date","insertOne"],"mappings":"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","file":"token.js","sourcesContent":["import _ from 'lodash'\nimport {ObjectID} from 'mongodb'\nimport {OrderedMap} from 'immutable'\n\nexport default class Token{\n\n\n\n    constructor(app){\n\n        this.app = app;\n        this.tokenler = new OrderedMap();\n\n    }\n\n    yukle(id = null){\n\n        id = `${id}`;\n\n\n        return new Promise((resolve , reject) =>{\n\n            //cache'e bak eger varsa databasede aramamiza gerek yok\n\n            const cachetoken = this.tokenler.get(id);\n            if(cachetoken){\n                return resolve(cachetoken);\n            }\n\n        this.IdileTokenBul(id , (hata , token) =>{\n\n            if(!hata && token){\n                const tokenId = `${token._id}`;\n                this.tokenler = this.tokenler.set(tokenId , token);\n            }\n            return hata ? reject(hata) : resolve(token);\n\n\n        });\n\n        })\n\n    }\n\n    cikis(token){\n\n        return new Promise((resolve, reject) => {\n\n            const tokenId = _.toString(token._id);\n            // to remove token from cache\n            this.tokenler = this.tokenler.remove(tokenId);\n            // we have to delete this token id from tokens collection\n\n            this.app.db.collection('tokenler').remove({_id: new ObjectID(tokenId)}, (hata, bilgi) => {\n\n                return hata ? reject(hata) : resolve(bilgi);\n            });\n\n        })\n\n    }\n\n    tokenVekullaniciYukle(id){\n\n        return new Promise((resolve , reject) =>{\n\n                        this.yukle(id).then((token) => {\n\n                            //console.log(\"git tqweqweqweqweoken\" , token);\n\n                         const kullaniciId = `${token.kullaniciId}`;\n                         this.app.models.kullanici.yukle(kullaniciId).then((kullanici) =>{\n\n                            token.kullanici = kullanici;\n                            return resolve(token);\n\n\n                          }).catch(hata =>{\n\n                             return reject(hata);\n\n                          });\n\n           }).catch((hata) => {\n\n            return reject(hata);\n\n            });\n\n\n            });\n\n    }\n\n    IdileTokenBul(id , callback = () => {}){\n\n        //console.log(\"DB de sorguya basla biktimmmm\");\n\n\n        const idObject = new ObjectID(id);\n        const sorgu = {_id : idObject};\n        this.app.db.collection('tokenler').findOne(sorgu ,(hata , sonuc ) =>{\n\n            if(hata || !sonuc){\n\n                return callback({Mesaj : \"Bulunamadi\"} , null);\n\n            }\n\n            return callback(null , sonuc);\n\n\n        })\n\n\n\n    }\n\n    Yarat(kullaniciId){\n\n\n\n        const token ={\n            kullaniciId : kullaniciId,\n            tarih : new Date(),\n\n        };\n\n\n        return new Promise((resolve , reject) =>{\n\n            this.app.db.collection('tokenler').insertOne(token , (hata , bilgi) =>{\n\n                return hata ? reject(hata) : resolve(token);\n        })\n    })\n    }\n\n\n\n}"]}